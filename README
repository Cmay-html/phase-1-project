# 

## DESCRIPTION 
A single-page web application showcasing Kenyaâ€™s rich national park landscapes and wildlife. Users can explore parks by location or activity, view animal details, and even add new parks .

## FEATURES e interface.
---

- Browse national parks across Kenya

- Filter parks by county or activity

- Add new parks dynamically

- Dark mode toggle for extra safari vibes

- Smooth styling with clean layout

- Asynchronous fetch requests to a mock API (db.json via JSON Server)
---

## HOW TO USE THE APPLICATION 

### Requirements
- A computer, tablet, or phone  
- Access to the internet  
- A modern web browser  

### View Live Site  
Visit the deployed application at:  
 https://cmay-html.github.io/phase-1-project/
 
The site allows you to:
- Search based on parks and activities for easy access of interests.
- View parks ,animals and activities in each park.
- Click 'Edit' to update details.
- Click 'Delete' to remove details.


### Local Development
If you want to run the project locally, you'll need:
- Node.js installed on your computer  
- Basic understanding of React JS  
- Code editor (VS Code recommended)  
- Terminal/Command Line  

### Installation Process
Clone this repository using:  
`git clone git@github.com:Cmay-html/phase-1-project.git`  
or by downloading a ZIP file of the code.

Navigate to the project directory:  
`cd phase-1-project`

Install the required dependencies:  
`npm install -g json-server`

Run the backend server using db.json:  
`json-server --watch db.json`

# Now open your browser to:
Frontend: http://127.0.0.1:5500/index.html
Backend:  http://localhost:3000/posts


---

## User Experience
 
- Form usability: Adding a new park is simple, with labels and placeholder hints guiding user input.

- Visual clarity: Clean typography and section spacing make reading and interaction effortless.

- Dark mode support: A toggle button allows users to switch to dark mode for better viewing comfort.

- Single-page experience: Users can explore everything without being redirected or losing context.

---

## Technologies Used
- JavaScript (ES6)  
- HTML5 
- CSS3 
- db.json

---

## Summary
. With responsive design, hover interactions, and image support, it combines front-end functionality with a simulated backend. Ideal for practicing frontend dev skills and exploring how data-driven interfaces work.

---

## Support and Contact Details
If you have any questions, suggestions, or need assistance, please contact:  
- Email: cynthialairumbe@gmail.com

---
